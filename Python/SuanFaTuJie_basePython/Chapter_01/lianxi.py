"""
Question：1.1 假设有一个包含128个名字的有序列表，你要使用二分查找在其中查找一个名字，请问最多需要几步才能找到？

"""
#Solution-error
"""
2的7次方 为 128 
最多需要8次
(利用4类推得到：如果只有4个名字，需要猜三次)
"""
#Correct 需要7次


"""
Question:
1.2 上面列表的长度翻倍后，最多需要几步?
"""
#Solution-error
"""
翻倍后又256个名字，最多需要15次
"""
#Correct 需要8次


"""
使用大O表示法给出下述各种情形的运行时间。
1.3 在电话簿中根据名字查找电话号码。
"""
#O(log n)

"""
1.4 在电话簿中根据电话号码找人。（提示：你必须查找整个电话簿。）
"""
#O(log n) error
#答案是O(n)

"""
1.5 阅读电话簿中每个人的电话号码。
"""
#O(n)

"""
1.6 阅读电话簿中姓名以A打头的人的电话号码。
"""
#O(0) error,对我脑子想的是电话簿是按照名字来！
#答案O(n),我根本就没想过会有什么O(n/26),hhh