#2.15 长整数加法
'''
问题描述
　　输入两个整数a和b，输出这两个整数的和。a和b都不超过100位。
算法描述
　　由于a和b都比较大，所以不能直接使用语言中的标准数据类型来存储。对于这种问题，一般使用数组来处理。
　　定义一个数组A，A[0]用于存储a的个位，A[1]用于存储a的十位，依此类推。同样可以用一个数组B来存储b。
　　计算c = a + b的时候，首先将A[0]与B[0]相加，如果有进位产生，则把进位（即和的十位数）存入r，
把和的个位数存入C[0]，即C[0]等于(A[0]+B[0])%10。然后计算A[1]与B[1]相加，
这时还应将低位进上来的值r也加起来，即C[1]应该是A[1]、B[1]和r三个数的和．
如果又有进位产生，则仍可将新的进位存入到r中，和的个位存到C[1]中。
依此类推，即可求出C的所有位。
　　最后将C输出即可。
输入格式
　　输入包括两行，第一行为一个非负整数a，第二行为一个非负整数b。两个整数都不超过100位，两数的最高位都不是0。
输出格式
　　输出一行，表示a + b的值。
样例输入
20100122201001221234567890
2010012220100122

样例输出
20100122203011233454668012
'''
n1 = input()
n2 = input()


wide = max(len(n1), len(n2))
C = [0 for i in range(wide+1)]
# print(wide)
n1 = "0"*(wide-len(n1)) + n1#在前面添加0，让两个数保持一致
n2 = "0"*(wide-len(n2)) + n2
# print(n1)
# print(n2)

n1 = n1[::-1]#翻转
n2 = n2[::-1]

r = 0#进位数
wei = 0#结果的位数

temp = 0#当前相加的结果
for i in range(wide):
    temp = int(n1[i]) + int(n2[i]) + r
    if temp > 9:
        wei += 1
    r = int(temp/10)#进位
    C[i] = temp%10
if wei >= wide:#如果结果的位数大于两个数的位数
    C[wei] = r
else:
    C.pop()
C = C[::-1]

for i in C:
    print(i, end='')