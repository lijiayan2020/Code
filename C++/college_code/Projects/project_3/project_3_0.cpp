//实验3
// 八皇后问题
// 目的要求：用C++语言求解八皇后问题，加强应用C++程序设计语言对问题进行分解和求解的能力。
// 实验内容：
// 八皇后问题，是一个古老而著名的问题，是回溯算法的典型例题。
// 该问题是十九世纪著名的数学家高斯1850年提出：在8X8格的国际象棋上摆放八个皇后，
// 使其不能互相攻击，即任意两个皇后都不能处于同一行、同一列或同一斜线上，问有多少种摆法？
// 在本实验中至少实现两种摆法，并输出所实现的摆法。

// #include<iostream>
// #include<cmath>//包含abs()取绝对值 
// using namespace std;

// //全局
// int y[8]; //列


// //输出放法
// void Show()
// {
// 	int count = 0;//计算有几种放法
// 	count++;
// 	for(int w_1=0;w_1<8;w_1++)
// 	{
// 		for(int w_2=0;w_2<8;w_2++)
// 		{
// 			if(y[w_2]==w_2)
// 			{
// 				cout << " 1 ";
// 			}
// 			else 
// 			{
// 				cout << " 0 ";
// 			}
// 		}
// 		cout << "\n";
// 	}
// 	cout << "\n";
// 	cout << ""
// }
// //放置第i个皇后，第i行的
// void Set(int i)
// {
// 	int s_1; //用于设定第i个列数
// 	int s_2; //和其他列比较
	
// 	if(i>8)
// 	{
// 		Show(); //如果到第8个了就输出结果
// 	}
// 	int j=1; //判断能否放
// 	for(s_1=0;s_1<8;s_1++)
// 	{
// 		y[s_1] = s_1;//设定第i个的列数
// 		for(s_2=0;s_2<8;s_2++)
// 		{
			
// 			y[s_2]=s_2;
// 			if(s_1==s_2||y[s_1]==y[s_2]||abs(y[s_1]-y[s_2])==abs(s_1-s_2))
// 			{
// 				j=0;
// 			}
// 		}
		
// 	}
// 	if(j) //没有冲突，就下一个
// 		{
// 			Set(i+1);
// 		}

// }
// int main()
// { 
// 	Set(0);
	
// 	return 0 ;
// } 